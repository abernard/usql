# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = lib/unix
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libusql___a_AR = $(AR) $(ARFLAGS)
libusql___a_LIBADD =
am__objects_1 = SQL92Parser.$(OBJEXT) SQLError.$(OBJEXT) \
	SQLNode.$(OBJEXT) SQLNodeList.$(OBJEXT) SQLParser.$(OBJEXT) \
	SQLStatement.$(OBJEXT) SQLStatementList.$(OBJEXT) \
	UnQLParser.$(OBJEXT) GQLParser.$(OBJEXT) SQLColumns.$(OBJEXT) \
	SQLCommand.$(OBJEXT) SQLDictionary.$(OBJEXT) \
	SQLExpression.$(OBJEXT) SQLOperator.$(OBJEXT) \
	SQLOrder.$(OBJEXT) SQLSet.$(OBJEXT) SQLValues.$(OBJEXT) \
	SQLLexerFunc.$(OBJEXT) SQLParserFunc.$(OBJEXT)
am_libusql___a_OBJECTS = $(am__objects_1)
libusql___a_OBJECTS = $(am_libusql___a_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(libusql___a_SOURCES)
DIST_SOURCES = $(libusql___a_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LIBRARIES = libusql++.a
INCLUDES = -I$(top_builddir)/include -I$(top_builddir)/src/

########################################
# uSQL for C++
########################################
usqlcc_source = \
	../../src/usql/SQL92Parser.cpp \
	../../src/usql/SQLError.cpp \
	../../src/usql/SQLNode.cpp \
	../../src/usql/SQLNodeList.cpp \
	../../src/usql/SQLParser.cpp \
	../../src/usql/SQLStatement.cpp \
	../../src/usql/SQLStatementList.cpp \
	../../src/usql/UnQLParser.cpp \
	../../src/usql/GQLParser.cpp \
	../../src/usql/node/SQLColumns.cpp \
	../../src/usql/node/SQLCommand.cpp \
	../../src/usql/node/SQLDictionary.cpp \
	../../src/usql/node/SQLExpression.cpp \
	../../src/usql/node/SQLOperator.cpp \
	../../src/usql/node/SQLOrder.cpp \
	../../src/usql/node/SQLSet.cpp \
	../../src/usql/node/SQLValues.cpp \
	../../src/usql/parser/antlr/SQLLexerFunc.cpp \
	../../src/usql/parser/antlr/SQLParserFunc.cpp

libusql___a_SOURCES = \
        $(usqlcc_source)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign lib/unix/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign lib/unix/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libusql++.a: $(libusql___a_OBJECTS) $(libusql___a_DEPENDENCIES) $(EXTRA_libusql___a_DEPENDENCIES) 
	-rm -f libusql++.a
	$(libusql___a_AR) libusql++.a $(libusql___a_OBJECTS) $(libusql___a_LIBADD)
	$(RANLIB) libusql++.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GQLParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQL92Parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLColumns.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLCommand.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLDictionary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLError.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLExpression.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLLexerFunc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLNode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLNodeList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLOperator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLOrder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLParserFunc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLStatement.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLStatementList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SQLValues.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UnQLParser.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

SQL92Parser.o: ../../src/usql/SQL92Parser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQL92Parser.o -MD -MP -MF $(DEPDIR)/SQL92Parser.Tpo -c -o SQL92Parser.o `test -f '../../src/usql/SQL92Parser.cpp' || echo '$(srcdir)/'`../../src/usql/SQL92Parser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQL92Parser.Tpo $(DEPDIR)/SQL92Parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQL92Parser.cpp' object='SQL92Parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQL92Parser.o `test -f '../../src/usql/SQL92Parser.cpp' || echo '$(srcdir)/'`../../src/usql/SQL92Parser.cpp

SQL92Parser.obj: ../../src/usql/SQL92Parser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQL92Parser.obj -MD -MP -MF $(DEPDIR)/SQL92Parser.Tpo -c -o SQL92Parser.obj `if test -f '../../src/usql/SQL92Parser.cpp'; then $(CYGPATH_W) '../../src/usql/SQL92Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQL92Parser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQL92Parser.Tpo $(DEPDIR)/SQL92Parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQL92Parser.cpp' object='SQL92Parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQL92Parser.obj `if test -f '../../src/usql/SQL92Parser.cpp'; then $(CYGPATH_W) '../../src/usql/SQL92Parser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQL92Parser.cpp'; fi`

SQLError.o: ../../src/usql/SQLError.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLError.o -MD -MP -MF $(DEPDIR)/SQLError.Tpo -c -o SQLError.o `test -f '../../src/usql/SQLError.cpp' || echo '$(srcdir)/'`../../src/usql/SQLError.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLError.Tpo $(DEPDIR)/SQLError.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLError.cpp' object='SQLError.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLError.o `test -f '../../src/usql/SQLError.cpp' || echo '$(srcdir)/'`../../src/usql/SQLError.cpp

SQLError.obj: ../../src/usql/SQLError.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLError.obj -MD -MP -MF $(DEPDIR)/SQLError.Tpo -c -o SQLError.obj `if test -f '../../src/usql/SQLError.cpp'; then $(CYGPATH_W) '../../src/usql/SQLError.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLError.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLError.Tpo $(DEPDIR)/SQLError.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLError.cpp' object='SQLError.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLError.obj `if test -f '../../src/usql/SQLError.cpp'; then $(CYGPATH_W) '../../src/usql/SQLError.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLError.cpp'; fi`

SQLNode.o: ../../src/usql/SQLNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLNode.o -MD -MP -MF $(DEPDIR)/SQLNode.Tpo -c -o SQLNode.o `test -f '../../src/usql/SQLNode.cpp' || echo '$(srcdir)/'`../../src/usql/SQLNode.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLNode.Tpo $(DEPDIR)/SQLNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLNode.cpp' object='SQLNode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLNode.o `test -f '../../src/usql/SQLNode.cpp' || echo '$(srcdir)/'`../../src/usql/SQLNode.cpp

SQLNode.obj: ../../src/usql/SQLNode.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLNode.obj -MD -MP -MF $(DEPDIR)/SQLNode.Tpo -c -o SQLNode.obj `if test -f '../../src/usql/SQLNode.cpp'; then $(CYGPATH_W) '../../src/usql/SQLNode.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLNode.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLNode.Tpo $(DEPDIR)/SQLNode.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLNode.cpp' object='SQLNode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLNode.obj `if test -f '../../src/usql/SQLNode.cpp'; then $(CYGPATH_W) '../../src/usql/SQLNode.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLNode.cpp'; fi`

SQLNodeList.o: ../../src/usql/SQLNodeList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLNodeList.o -MD -MP -MF $(DEPDIR)/SQLNodeList.Tpo -c -o SQLNodeList.o `test -f '../../src/usql/SQLNodeList.cpp' || echo '$(srcdir)/'`../../src/usql/SQLNodeList.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLNodeList.Tpo $(DEPDIR)/SQLNodeList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLNodeList.cpp' object='SQLNodeList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLNodeList.o `test -f '../../src/usql/SQLNodeList.cpp' || echo '$(srcdir)/'`../../src/usql/SQLNodeList.cpp

SQLNodeList.obj: ../../src/usql/SQLNodeList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLNodeList.obj -MD -MP -MF $(DEPDIR)/SQLNodeList.Tpo -c -o SQLNodeList.obj `if test -f '../../src/usql/SQLNodeList.cpp'; then $(CYGPATH_W) '../../src/usql/SQLNodeList.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLNodeList.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLNodeList.Tpo $(DEPDIR)/SQLNodeList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLNodeList.cpp' object='SQLNodeList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLNodeList.obj `if test -f '../../src/usql/SQLNodeList.cpp'; then $(CYGPATH_W) '../../src/usql/SQLNodeList.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLNodeList.cpp'; fi`

SQLParser.o: ../../src/usql/SQLParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLParser.o -MD -MP -MF $(DEPDIR)/SQLParser.Tpo -c -o SQLParser.o `test -f '../../src/usql/SQLParser.cpp' || echo '$(srcdir)/'`../../src/usql/SQLParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLParser.Tpo $(DEPDIR)/SQLParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLParser.cpp' object='SQLParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLParser.o `test -f '../../src/usql/SQLParser.cpp' || echo '$(srcdir)/'`../../src/usql/SQLParser.cpp

SQLParser.obj: ../../src/usql/SQLParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLParser.obj -MD -MP -MF $(DEPDIR)/SQLParser.Tpo -c -o SQLParser.obj `if test -f '../../src/usql/SQLParser.cpp'; then $(CYGPATH_W) '../../src/usql/SQLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLParser.Tpo $(DEPDIR)/SQLParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLParser.cpp' object='SQLParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLParser.obj `if test -f '../../src/usql/SQLParser.cpp'; then $(CYGPATH_W) '../../src/usql/SQLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLParser.cpp'; fi`

SQLStatement.o: ../../src/usql/SQLStatement.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLStatement.o -MD -MP -MF $(DEPDIR)/SQLStatement.Tpo -c -o SQLStatement.o `test -f '../../src/usql/SQLStatement.cpp' || echo '$(srcdir)/'`../../src/usql/SQLStatement.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLStatement.Tpo $(DEPDIR)/SQLStatement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLStatement.cpp' object='SQLStatement.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLStatement.o `test -f '../../src/usql/SQLStatement.cpp' || echo '$(srcdir)/'`../../src/usql/SQLStatement.cpp

SQLStatement.obj: ../../src/usql/SQLStatement.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLStatement.obj -MD -MP -MF $(DEPDIR)/SQLStatement.Tpo -c -o SQLStatement.obj `if test -f '../../src/usql/SQLStatement.cpp'; then $(CYGPATH_W) '../../src/usql/SQLStatement.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLStatement.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLStatement.Tpo $(DEPDIR)/SQLStatement.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLStatement.cpp' object='SQLStatement.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLStatement.obj `if test -f '../../src/usql/SQLStatement.cpp'; then $(CYGPATH_W) '../../src/usql/SQLStatement.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLStatement.cpp'; fi`

SQLStatementList.o: ../../src/usql/SQLStatementList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLStatementList.o -MD -MP -MF $(DEPDIR)/SQLStatementList.Tpo -c -o SQLStatementList.o `test -f '../../src/usql/SQLStatementList.cpp' || echo '$(srcdir)/'`../../src/usql/SQLStatementList.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLStatementList.Tpo $(DEPDIR)/SQLStatementList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLStatementList.cpp' object='SQLStatementList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLStatementList.o `test -f '../../src/usql/SQLStatementList.cpp' || echo '$(srcdir)/'`../../src/usql/SQLStatementList.cpp

SQLStatementList.obj: ../../src/usql/SQLStatementList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLStatementList.obj -MD -MP -MF $(DEPDIR)/SQLStatementList.Tpo -c -o SQLStatementList.obj `if test -f '../../src/usql/SQLStatementList.cpp'; then $(CYGPATH_W) '../../src/usql/SQLStatementList.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLStatementList.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLStatementList.Tpo $(DEPDIR)/SQLStatementList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/SQLStatementList.cpp' object='SQLStatementList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLStatementList.obj `if test -f '../../src/usql/SQLStatementList.cpp'; then $(CYGPATH_W) '../../src/usql/SQLStatementList.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/SQLStatementList.cpp'; fi`

UnQLParser.o: ../../src/usql/UnQLParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UnQLParser.o -MD -MP -MF $(DEPDIR)/UnQLParser.Tpo -c -o UnQLParser.o `test -f '../../src/usql/UnQLParser.cpp' || echo '$(srcdir)/'`../../src/usql/UnQLParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/UnQLParser.Tpo $(DEPDIR)/UnQLParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/UnQLParser.cpp' object='UnQLParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UnQLParser.o `test -f '../../src/usql/UnQLParser.cpp' || echo '$(srcdir)/'`../../src/usql/UnQLParser.cpp

UnQLParser.obj: ../../src/usql/UnQLParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UnQLParser.obj -MD -MP -MF $(DEPDIR)/UnQLParser.Tpo -c -o UnQLParser.obj `if test -f '../../src/usql/UnQLParser.cpp'; then $(CYGPATH_W) '../../src/usql/UnQLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/UnQLParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/UnQLParser.Tpo $(DEPDIR)/UnQLParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/UnQLParser.cpp' object='UnQLParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UnQLParser.obj `if test -f '../../src/usql/UnQLParser.cpp'; then $(CYGPATH_W) '../../src/usql/UnQLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/UnQLParser.cpp'; fi`

GQLParser.o: ../../src/usql/GQLParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GQLParser.o -MD -MP -MF $(DEPDIR)/GQLParser.Tpo -c -o GQLParser.o `test -f '../../src/usql/GQLParser.cpp' || echo '$(srcdir)/'`../../src/usql/GQLParser.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GQLParser.Tpo $(DEPDIR)/GQLParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/GQLParser.cpp' object='GQLParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GQLParser.o `test -f '../../src/usql/GQLParser.cpp' || echo '$(srcdir)/'`../../src/usql/GQLParser.cpp

GQLParser.obj: ../../src/usql/GQLParser.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT GQLParser.obj -MD -MP -MF $(DEPDIR)/GQLParser.Tpo -c -o GQLParser.obj `if test -f '../../src/usql/GQLParser.cpp'; then $(CYGPATH_W) '../../src/usql/GQLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/GQLParser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/GQLParser.Tpo $(DEPDIR)/GQLParser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/GQLParser.cpp' object='GQLParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GQLParser.obj `if test -f '../../src/usql/GQLParser.cpp'; then $(CYGPATH_W) '../../src/usql/GQLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/GQLParser.cpp'; fi`

SQLColumns.o: ../../src/usql/node/SQLColumns.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLColumns.o -MD -MP -MF $(DEPDIR)/SQLColumns.Tpo -c -o SQLColumns.o `test -f '../../src/usql/node/SQLColumns.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLColumns.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLColumns.Tpo $(DEPDIR)/SQLColumns.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLColumns.cpp' object='SQLColumns.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLColumns.o `test -f '../../src/usql/node/SQLColumns.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLColumns.cpp

SQLColumns.obj: ../../src/usql/node/SQLColumns.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLColumns.obj -MD -MP -MF $(DEPDIR)/SQLColumns.Tpo -c -o SQLColumns.obj `if test -f '../../src/usql/node/SQLColumns.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLColumns.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLColumns.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLColumns.Tpo $(DEPDIR)/SQLColumns.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLColumns.cpp' object='SQLColumns.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLColumns.obj `if test -f '../../src/usql/node/SQLColumns.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLColumns.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLColumns.cpp'; fi`

SQLCommand.o: ../../src/usql/node/SQLCommand.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLCommand.o -MD -MP -MF $(DEPDIR)/SQLCommand.Tpo -c -o SQLCommand.o `test -f '../../src/usql/node/SQLCommand.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLCommand.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLCommand.Tpo $(DEPDIR)/SQLCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLCommand.cpp' object='SQLCommand.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLCommand.o `test -f '../../src/usql/node/SQLCommand.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLCommand.cpp

SQLCommand.obj: ../../src/usql/node/SQLCommand.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLCommand.obj -MD -MP -MF $(DEPDIR)/SQLCommand.Tpo -c -o SQLCommand.obj `if test -f '../../src/usql/node/SQLCommand.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLCommand.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLCommand.Tpo $(DEPDIR)/SQLCommand.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLCommand.cpp' object='SQLCommand.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLCommand.obj `if test -f '../../src/usql/node/SQLCommand.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLCommand.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLCommand.cpp'; fi`

SQLDictionary.o: ../../src/usql/node/SQLDictionary.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLDictionary.o -MD -MP -MF $(DEPDIR)/SQLDictionary.Tpo -c -o SQLDictionary.o `test -f '../../src/usql/node/SQLDictionary.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLDictionary.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLDictionary.Tpo $(DEPDIR)/SQLDictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLDictionary.cpp' object='SQLDictionary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLDictionary.o `test -f '../../src/usql/node/SQLDictionary.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLDictionary.cpp

SQLDictionary.obj: ../../src/usql/node/SQLDictionary.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLDictionary.obj -MD -MP -MF $(DEPDIR)/SQLDictionary.Tpo -c -o SQLDictionary.obj `if test -f '../../src/usql/node/SQLDictionary.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLDictionary.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLDictionary.Tpo $(DEPDIR)/SQLDictionary.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLDictionary.cpp' object='SQLDictionary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLDictionary.obj `if test -f '../../src/usql/node/SQLDictionary.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLDictionary.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLDictionary.cpp'; fi`

SQLExpression.o: ../../src/usql/node/SQLExpression.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLExpression.o -MD -MP -MF $(DEPDIR)/SQLExpression.Tpo -c -o SQLExpression.o `test -f '../../src/usql/node/SQLExpression.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLExpression.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLExpression.Tpo $(DEPDIR)/SQLExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLExpression.cpp' object='SQLExpression.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLExpression.o `test -f '../../src/usql/node/SQLExpression.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLExpression.cpp

SQLExpression.obj: ../../src/usql/node/SQLExpression.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLExpression.obj -MD -MP -MF $(DEPDIR)/SQLExpression.Tpo -c -o SQLExpression.obj `if test -f '../../src/usql/node/SQLExpression.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLExpression.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLExpression.Tpo $(DEPDIR)/SQLExpression.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLExpression.cpp' object='SQLExpression.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLExpression.obj `if test -f '../../src/usql/node/SQLExpression.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLExpression.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLExpression.cpp'; fi`

SQLOperator.o: ../../src/usql/node/SQLOperator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLOperator.o -MD -MP -MF $(DEPDIR)/SQLOperator.Tpo -c -o SQLOperator.o `test -f '../../src/usql/node/SQLOperator.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLOperator.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLOperator.Tpo $(DEPDIR)/SQLOperator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLOperator.cpp' object='SQLOperator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLOperator.o `test -f '../../src/usql/node/SQLOperator.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLOperator.cpp

SQLOperator.obj: ../../src/usql/node/SQLOperator.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLOperator.obj -MD -MP -MF $(DEPDIR)/SQLOperator.Tpo -c -o SQLOperator.obj `if test -f '../../src/usql/node/SQLOperator.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLOperator.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLOperator.Tpo $(DEPDIR)/SQLOperator.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLOperator.cpp' object='SQLOperator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLOperator.obj `if test -f '../../src/usql/node/SQLOperator.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLOperator.cpp'; fi`

SQLOrder.o: ../../src/usql/node/SQLOrder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLOrder.o -MD -MP -MF $(DEPDIR)/SQLOrder.Tpo -c -o SQLOrder.o `test -f '../../src/usql/node/SQLOrder.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLOrder.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLOrder.Tpo $(DEPDIR)/SQLOrder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLOrder.cpp' object='SQLOrder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLOrder.o `test -f '../../src/usql/node/SQLOrder.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLOrder.cpp

SQLOrder.obj: ../../src/usql/node/SQLOrder.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLOrder.obj -MD -MP -MF $(DEPDIR)/SQLOrder.Tpo -c -o SQLOrder.obj `if test -f '../../src/usql/node/SQLOrder.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLOrder.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLOrder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLOrder.Tpo $(DEPDIR)/SQLOrder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLOrder.cpp' object='SQLOrder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLOrder.obj `if test -f '../../src/usql/node/SQLOrder.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLOrder.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLOrder.cpp'; fi`

SQLSet.o: ../../src/usql/node/SQLSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLSet.o -MD -MP -MF $(DEPDIR)/SQLSet.Tpo -c -o SQLSet.o `test -f '../../src/usql/node/SQLSet.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLSet.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLSet.Tpo $(DEPDIR)/SQLSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLSet.cpp' object='SQLSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLSet.o `test -f '../../src/usql/node/SQLSet.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLSet.cpp

SQLSet.obj: ../../src/usql/node/SQLSet.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLSet.obj -MD -MP -MF $(DEPDIR)/SQLSet.Tpo -c -o SQLSet.obj `if test -f '../../src/usql/node/SQLSet.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLSet.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLSet.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLSet.Tpo $(DEPDIR)/SQLSet.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLSet.cpp' object='SQLSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLSet.obj `if test -f '../../src/usql/node/SQLSet.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLSet.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLSet.cpp'; fi`

SQLValues.o: ../../src/usql/node/SQLValues.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLValues.o -MD -MP -MF $(DEPDIR)/SQLValues.Tpo -c -o SQLValues.o `test -f '../../src/usql/node/SQLValues.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLValues.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLValues.Tpo $(DEPDIR)/SQLValues.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLValues.cpp' object='SQLValues.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLValues.o `test -f '../../src/usql/node/SQLValues.cpp' || echo '$(srcdir)/'`../../src/usql/node/SQLValues.cpp

SQLValues.obj: ../../src/usql/node/SQLValues.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLValues.obj -MD -MP -MF $(DEPDIR)/SQLValues.Tpo -c -o SQLValues.obj `if test -f '../../src/usql/node/SQLValues.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLValues.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLValues.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLValues.Tpo $(DEPDIR)/SQLValues.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/node/SQLValues.cpp' object='SQLValues.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLValues.obj `if test -f '../../src/usql/node/SQLValues.cpp'; then $(CYGPATH_W) '../../src/usql/node/SQLValues.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/node/SQLValues.cpp'; fi`

SQLLexerFunc.o: ../../src/usql/parser/antlr/SQLLexerFunc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLLexerFunc.o -MD -MP -MF $(DEPDIR)/SQLLexerFunc.Tpo -c -o SQLLexerFunc.o `test -f '../../src/usql/parser/antlr/SQLLexerFunc.cpp' || echo '$(srcdir)/'`../../src/usql/parser/antlr/SQLLexerFunc.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLLexerFunc.Tpo $(DEPDIR)/SQLLexerFunc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/parser/antlr/SQLLexerFunc.cpp' object='SQLLexerFunc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLLexerFunc.o `test -f '../../src/usql/parser/antlr/SQLLexerFunc.cpp' || echo '$(srcdir)/'`../../src/usql/parser/antlr/SQLLexerFunc.cpp

SQLLexerFunc.obj: ../../src/usql/parser/antlr/SQLLexerFunc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLLexerFunc.obj -MD -MP -MF $(DEPDIR)/SQLLexerFunc.Tpo -c -o SQLLexerFunc.obj `if test -f '../../src/usql/parser/antlr/SQLLexerFunc.cpp'; then $(CYGPATH_W) '../../src/usql/parser/antlr/SQLLexerFunc.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/parser/antlr/SQLLexerFunc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLLexerFunc.Tpo $(DEPDIR)/SQLLexerFunc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/parser/antlr/SQLLexerFunc.cpp' object='SQLLexerFunc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLLexerFunc.obj `if test -f '../../src/usql/parser/antlr/SQLLexerFunc.cpp'; then $(CYGPATH_W) '../../src/usql/parser/antlr/SQLLexerFunc.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/parser/antlr/SQLLexerFunc.cpp'; fi`

SQLParserFunc.o: ../../src/usql/parser/antlr/SQLParserFunc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLParserFunc.o -MD -MP -MF $(DEPDIR)/SQLParserFunc.Tpo -c -o SQLParserFunc.o `test -f '../../src/usql/parser/antlr/SQLParserFunc.cpp' || echo '$(srcdir)/'`../../src/usql/parser/antlr/SQLParserFunc.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLParserFunc.Tpo $(DEPDIR)/SQLParserFunc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/parser/antlr/SQLParserFunc.cpp' object='SQLParserFunc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLParserFunc.o `test -f '../../src/usql/parser/antlr/SQLParserFunc.cpp' || echo '$(srcdir)/'`../../src/usql/parser/antlr/SQLParserFunc.cpp

SQLParserFunc.obj: ../../src/usql/parser/antlr/SQLParserFunc.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SQLParserFunc.obj -MD -MP -MF $(DEPDIR)/SQLParserFunc.Tpo -c -o SQLParserFunc.obj `if test -f '../../src/usql/parser/antlr/SQLParserFunc.cpp'; then $(CYGPATH_W) '../../src/usql/parser/antlr/SQLParserFunc.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/parser/antlr/SQLParserFunc.cpp'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/SQLParserFunc.Tpo $(DEPDIR)/SQLParserFunc.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='../../src/usql/parser/antlr/SQLParserFunc.cpp' object='SQLParserFunc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SQLParserFunc.obj `if test -f '../../src/usql/parser/antlr/SQLParserFunc.cpp'; then $(CYGPATH_W) '../../src/usql/parser/antlr/SQLParserFunc.cpp'; else $(CYGPATH_W) '$(srcdir)/../../src/usql/parser/antlr/SQLParserFunc.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-libLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
